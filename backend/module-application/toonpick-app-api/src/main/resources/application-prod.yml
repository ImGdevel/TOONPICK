spring:
  datasource:
    data:
      driver-class-name: org.mariadb.jdbc.Driver
      jdbc-url: ${SPRING_DATASOURCE_DATA_URL}
      username: ${SPRING_DATASOURCE_DATA_USERNAME}
      password: ${SPRING_DATASOURCE_DATA_PASSWORD}
    meta:
      driver-class-name: org.mariadb.jdbc.Driver
      jdbc-url: ${SPRING_DATASOURCE_META_URL}
      username: ${SPRING_DATASOURCE_META_USERNAME}
      password: ${SPRING_DATASOURCE_META_PASSWORD}

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  data:
    mongodb:
      uri: ${SPRING_NOSQL_DATA_URL}

  jwt:
    secret: ${JWT_SECRET}
    access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
    refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          naver:
            client-name: naver
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_REGION}
      s3:
        bucket: ${AWS_S3_BUCKET}
      sqs:
        queue:
          request:
            name: ${AWS_SQS_UPDATE_REQUEST_QUEUE_NAME}
            url: ${AWS_SQS_UPDATE_REQUEST_QUEUE_URL}
          response:
            name: ${AWS_SQS_UPDATE_RESPONSE_QUEUE_NAME}
            url: ${AWS_SQS_UPDATE_RESPONSE_QUEUE_URL}
        auto-create: false
        enabled: false
